======================================================start date : 06Sep2024======
This is the help file for docker for future reference
======================================================
Current status : session-5, 
-------
-create ubuntu ec2 instance i did 22
-https://docs.docker.com/engine/install/ubuntu/#install-using-the-repository
-service docker status
-sudo docker run hello-world

below 3 command to run docker command without sudo 
-sudo usermod -aG docker ${USER}
-sudo chown -R root:docker /var/run/docker
-restart terminal

----docker command:-----
-docker images (show list of images)
-docker images -a
-docker images -q
-docker run image (download image and run it)
-docker history hello-world (show layer of image)
-docker pull image (download image)
-docker search hello-world (search image on docker hub)
-docker rmi imageId(remove image, use -f for forcefully)

-docker ps     (show running container)
-docker ps -a  (show all container )
-docker rm containId (delete container)
-docker rm -f containId (deleting forcefully container)
-docker rm $(docker ps -aq) (remove all container)
-docker ps -aq(list container id)
-docker tag imageId imageName:tag (add name and tag to image)
-docker build -t myhi:v1.0 . (build image with image name myHi and version v1.0)


-docker run -d container (run container run detached mode)
-docker run -it containerId (to enter container, interactive mode)
-ctr pq (come out for guest os like ubuntu)
-docker commit containerId imageName(to create and commit image )[one way of creating image ]
-docker exec -it containerId /bin/bash (to inter in container)

setup ubuntu in docker
-docker run -it ubuntu:20.04
-apt-get update
-apt-get install vim (install vim)
-docker commit ef2e9486b5e2 myubuntu1 (creating image from existing container)
-docker run -it imageName:tag
-apt-get install openjdk-8-jdk (install jdk)
-docker commit 2f2b17be1241 myjdk:v8 (creating image)

building docker file (in session - 5)
1) create helloapp folder and create Dockerfile in this with below lines
FROM ubuntu:20.04
LABEL maintainer sri@jlcindia.com
RUN apt-get -y update
RUN apt-get -y install openjdk-8-jdk wget
RUN mkdir /home/myjlc
COPY Hello.java /home/myjlc
WORKDIR /home/myjlc
RUN javac Hello.java
CMD ["java", "Hello"]
2) ceate Hello.java
3) docker build .

Example: docker file using base image openjdk
FROM openjdk:8
LABEL maintainer sri@jlcindia.com
RUN mkdir /home/myjlc
COPY Hi.java /home/myjlc
WORKDIR /home/myjlc
RUN javac Hi.java
CMD ["java", "Hi"]

Example: docker file using base image tomcat
FROM ubuntu:20.04
LABEL maintainer sri@jlcindia.com
RUN apt-get -y update
RUN apt-get -y install openjdk-8-jdk wget
RUN wget https://archive.apache.org/dist/tomcat/tomcat-8/v8.5.55/bin/apache-tomcat-8.5.55.tar.gz -O /tmp/tomcat.tar.gz
RUN cd /tmp && tar xvfz tomcat.tar.gz
RUN mv /tmp/apache-tomcat-8.5.55 /opt/tomcat
EXPOSE 8080
CMD /opt/tomcat/bin/catalina.sh run

----------session - 6-----------------10sep---





 